/*
 * (c)Cuchuk Sergey Alexandrovich, 2007
 * Cuchuk.Sergey@gmail.com
 * toCuchukSergey@yandex.ru
 * 
 * Developed in #Develop IDE
 */

using System;
using System.Xml;
using System.Text;

namespace BULocalization
{
	/// <summary>
	/// Description of EmailClass.
	/// </summary>
	public class EmailClass
	{
		public string FromEmail = "someemail@somesite.com";
		public string SubjectTemplate = "Please update your translation!!!";
		public string BodyTemplate = "$translator!\\n\\n" + 
			"Since previous release of program translation changed, so could you update your translation file(in attachment) and send it back through Translator\\Translation\\Send via e-mail\\n\\n\\n"+
			"_____________________\\n" +
			"This e-mail is generated by BULocalization soft automatically";
		public string SMPTHost = "127.0.0.1";
		public string SMPTPort = "25";//default port
		
		
		public EmailClass()
		{
			
		}
		
		public void Save(string FileName)
		{
			XmlWriterSettings settings = new XmlWriterSettings();
			settings.Indent = true;
			settings.Encoding = Encoding.Unicode;
			settings.IndentChars = ("    ");
			XmlWriter writer = null;
			
			if (FileName.Length == 0) throw new Exception("Empty name");
			
			try
			{
				writer = XmlWriter.Create(FileName, settings);
				if (writer == null) throw new Exception("Could not open file for writing: " + FileName);
				writer.WriteStartElement("BULocalization");
				writer.WriteStartElement("EMail_template");
					writer.WriteElementString("FromEmail", FromEmail);
					writer.WriteElementString("SubjectTemplate", SubjectTemplate);
					writer.WriteElementString("BodyTemplate", BodyTemplate);
				writer.WriteEndElement();
				
				writer.WriteStartElement("SMPT_options");
					writer.WriteElementString("SMPTHost", SMPTHost);
					writer.WriteElementString("SMPTPort", SMPTPort);
				writer.WriteEndElement();
				writer.WriteEndElement();
				
				writer.Flush();
				writer.Close();
			}
			catch (Exception e)
			{
				writer.Close();
				throw e;
			}
		}
		
		
		public void Load(string FileName)
		{
			XmlReaderSettings settings = new XmlReaderSettings();
			settings.ConformanceLevel = ConformanceLevel.Fragment;
			settings.IgnoreWhitespace = true;
			settings.IgnoreComments = true;
			XmlReader reader = null;

			if (FileName.Length == 0) throw new Exception("Empty name");
			
			try
			{
				reader = XmlReader.Create(FileName, settings);
				if (reader == null) throw new Exception("Could not open file for reading: " + FileName);
				reader.ReadStartElement("BULocalization");
				reader.ReadStartElement("EMail_template");
					FromEmail = reader.ReadElementString("FromEmail");
					SubjectTemplate = reader.ReadElementString("SubjectTemplate");
					BodyTemplate = reader.ReadElementString("BodyTemplate");					
				reader.ReadEndElement();
				reader.ReadStartElement("SMPT_options");
					SMPTHost = reader.ReadElementString("SMPTHost");
					SMPTPort = reader.ReadElementString("SMPTPort");					
				reader.ReadEndElement();				
				reader.ReadEndElement();
				reader.Close();
			}
			catch (Exception e)
			{
				reader.Close();
				throw e;
			}
		}
	}
}
